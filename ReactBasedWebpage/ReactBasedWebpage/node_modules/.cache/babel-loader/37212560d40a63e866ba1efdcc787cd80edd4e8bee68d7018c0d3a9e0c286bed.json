{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan_p\\\\OneDrive\\\\Desktop\\\\Ser 401\\\\Sprint 7\\\\US177\\\\Conversion\\\\cycleapp\\\\src\\\\tabs\\\\exportGPXTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportGPXTab = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [error, setError] = useState('');\n  const port = 4000; // Port to connect to Nodejs\n  const serverURL = `http://${window.location.hostname}:${port}`;\n  const handleExportClick = async () => {\n    try {\n      const response = await fetch(`${serverURL}/files`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const fetchedFiles = await response.json();\n      setFiles(fetchedFiles);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      setError('Error loading files. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportClick,\n      children: \"Export GPX File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowY: 'scroll',\n        height: '200px'\n      },\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${serverURL}/uploads/${file}`,\n          download: true,\n          children: file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ExportGPXTab, \"SCqAW5CU1lwHUN8aBjKuC9Gna7o=\");\n_c = ExportGPXTab;\nexport default ExportGPXTab;\nvar _c;\n$RefreshReg$(_c, \"ExportGPXTab\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExportGPXTab","_s","files","setFiles","error","setError","port","serverURL","window","location","hostname","handleExportClick","response","fetch","ok","Error","fetchedFiles","json","console","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","overflowY","height","map","file","index","href","download","_c","$RefreshReg$"],"sources":["C:/Users/jan_p/OneDrive/Desktop/Ser 401/Sprint 7/US177/Conversion/cycleapp/src/tabs/exportGPXTab.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ExportGPXTab = () => {\n    const [files, setFiles] = useState([]);\n    const [error, setError] = useState('');\n\n    const port = 4000; // Port to connect to Nodejs\n    const serverURL = `http://${window.location.hostname}:${port}`;\n\n    const handleExportClick = async () => {\n        try {\n            const response = await fetch(`${serverURL}/files`);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const fetchedFiles = await response.json();\n            setFiles(fetchedFiles);\n        } catch (error) {\n            console.error('Error fetching files:', error);\n            setError('Error loading files. Please try again later.');\n        }\n    };\n\n    return (\n        <div id=\"background\">\n            <button onClick={handleExportClick}>Export GPX File</button>\n            {error && <p>{error}</p>}\n            <div style={{ overflowY: 'scroll', height: '200px' }}>\n                {files.map((file, index) => (\n                    <div key={index}>\n                        <a href={`${serverURL}/uploads/${file}`} download>\n                            {file}\n                        </a>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ExportGPXTab;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,IAAI,GAAG,IAAI,CAAC,CAAC;EACnB,MAAMC,SAAS,GAAI,UAASC,MAAM,CAACC,QAAQ,CAACC,QAAS,IAAGJ,IAAK,EAAC;EAE9D,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,SAAU,QAAO,CAAC;MAClD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1Cd,QAAQ,CAACa,YAAY,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZc,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,8CAA8C,CAAC;IAC5D;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKoB,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAChBrB,OAAA;MAAQsB,OAAO,EAAEV,iBAAkB;MAAAS,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3DrB,KAAK,iBAAIL,OAAA;MAAAqB,QAAA,EAAIhB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA;MAAK2B,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAR,QAAA,EAChDlB,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBhC,OAAA;QAAAqB,QAAA,eACIrB,OAAA;UAAGiC,IAAI,EAAG,GAAEzB,SAAU,YAAWuB,IAAK,EAAE;UAACG,QAAQ;UAAAb,QAAA,EAC5CU;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GAHEM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CApCID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}