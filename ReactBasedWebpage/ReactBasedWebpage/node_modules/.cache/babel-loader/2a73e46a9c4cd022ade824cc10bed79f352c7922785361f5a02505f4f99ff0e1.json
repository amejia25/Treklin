{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jan_p\\\\OneDrive\\\\Desktop\\\\Ser 401\\\\Sprint 8\\\\US192\\\\ReactBasedWebpage\\\\cycleapp\\\\src\\\\Tabs\\\\ImportGPXTab.js\",\n  _s = $RefreshSig$();\n//importGPXTab.js\n//This file contains code for the area in WebsiteBackbone.js when the user hits \"Import GPX\"\n//It also cotains the code to import a gpx file.\n//Coder: Jan Baraniecki\n// Event Listener for Import GPX Button from the Main Menu\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportGPXTab = () => {\n  _s();\n  const [uploadStatus, setUploadStatus] = useState('');\n  const port = 4000;\n  const serverURL = `http://${window.location.hostname}:${port}/uploads`;\n  const handleGPXProcessClick = () => {\n    // Clear error Screen\n    setUploadStatus('');\n\n    // Open file input dialog\n    document.getElementById('fileInput').click();\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('gpxFile', file);\n      fetch(serverURL, {\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error('Upload failed');\n        }\n      }).then(data => {\n        setUploadStatus(`Success: ${data}`);\n      }).catch(error => {\n        setUploadStatus(`Error: ${error.message}`);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Import GPX File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the Import GPX File section content.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGPXProcessClick,\n      className: \"button\",\n      children: \"Process GPX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"uploadStatus\",\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ImportGPXTab, \"TfU4Cpo7nwifJz0jhBh5GNsCGik=\");\n_c = ImportGPXTab;\nexport default ImportGPXTab;\nvar _c;\n$RefreshReg$(_c, \"ImportGPXTab\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImportGPXTab","_s","uploadStatus","setUploadStatus","port","serverURL","window","location","hostname","handleGPXProcessClick","document","getElementById","click","handleFileChange","event","file","target","files","formData","FormData","append","fetch","method","body","then","response","ok","text","Error","data","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","type","id","style","display","onChange","_c","$RefreshReg$"],"sources":["C:/Users/jan_p/OneDrive/Desktop/Ser 401/Sprint 8/US192/ReactBasedWebpage/cycleapp/src/Tabs/ImportGPXTab.js"],"sourcesContent":["//importGPXTab.js\r\n//This file contains code for the area in WebsiteBackbone.js when the user hits \"Import GPX\"\r\n//It also cotains the code to import a gpx file.\r\n//Coder: Jan Baraniecki\r\n// Event Listener for Import GPX Button from the Main Menu\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst ImportGPXTab = () => {\r\n    const [uploadStatus, setUploadStatus] = useState('');\r\n    const port = 4000;\r\n    const serverURL = `http://${window.location.hostname}:${port}/uploads`;\r\n\r\n    const handleGPXProcessClick = () => {\r\n        // Clear error Screen\r\n        setUploadStatus('');\r\n\r\n        // Open file input dialog\r\n        document.getElementById('fileInput').click();\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const formData = new FormData();\r\n            formData.append('gpxFile', file);\r\n\r\n            fetch(serverURL, {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    return response.text();\r\n                } else {\r\n                    throw new Error('Upload failed');\r\n                }\r\n            })\r\n            .then(data => {\r\n                setUploadStatus(`Success: ${data}`);\r\n            })\r\n            .catch(error => {\r\n                setUploadStatus(`Error: ${error.message}`);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Import GPX File</h1>\r\n            <p>This is the Import GPX File section content.</p>\r\n            <button onClick={handleGPXProcessClick} className=\"button\">Process GPX</button>\r\n            <input type=\"file\" id=\"fileInput\" style={{ display: 'none' }} onChange={handleFileChange} />\r\n            <div id=\"uploadStatus\">\r\n                {uploadStatus}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImportGPXTab;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMO,IAAI,GAAG,IAAI;EACjB,MAAMC,SAAS,GAAI,UAASC,MAAM,CAACC,QAAQ,CAACC,QAAS,IAAGJ,IAAK,UAAS;EAEtE,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;IAChC;IACAN,eAAe,CAAC,EAAE,CAAC;;IAEnB;IACAO,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACN,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEL,IAAI,CAAC;MAEhCM,KAAK,CAAChB,SAAS,EAAE;QACbiB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACV,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAI;QACd,IAAGA,QAAQ,CAACC,EAAE,EAAE;UACZ,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1B,CAAC,MAAM;UACH,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;QACpC;MACJ,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACV1B,eAAe,CAAE,YAAW0B,IAAK,EAAC,CAAC;MACvC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZ5B,eAAe,CAAE,UAAS4B,KAAK,CAACC,OAAQ,EAAC,CAAC;MAC9C,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtC,OAAA;MAAAkC,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnDtC,OAAA;MAAQuC,OAAO,EAAE7B,qBAAsB;MAAC8B,SAAS,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/EtC,OAAA;MAAOyC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,WAAW;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAACC,QAAQ,EAAE/B;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5FtC,OAAA;MAAK0C,EAAE,EAAC,cAAc;MAAAR,QAAA,EACjB/B;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpC,EAAA,CAlDID,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}