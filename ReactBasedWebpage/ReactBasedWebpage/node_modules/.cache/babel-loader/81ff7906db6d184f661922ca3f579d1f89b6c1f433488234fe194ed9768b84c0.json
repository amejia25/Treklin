{"ast":null,"code":"// gpxParser.js\n// A basic gpx parser to get started in reading gpx files returning data that can go into google maps.\n//Coder: Jan Baraniecki\nfunction parseGPX(gpxData, callback) {\n  var parser = new DOMParser();\n  var xmlDoc = parser.parseFromString(gpxData, \"text/xml\");\n  var tracks = [];\n  var trkElements = xmlDoc.getElementsByTagName(\"trk\");\n  for (var i = 0; i < trkElements.length; i++) {\n    var track = {\n      points: []\n    };\n    var trksegElements = trkElements[i].getElementsByTagName(\"trkseg\");\n    for (var j = 0; j < trksegElements.length; j++) {\n      var trkptElements = trksegElements[j].getElementsByTagName(\"trkpt\");\n      for (var k = 0; k < trkptElements.length; k++) {\n        var lat = parseFloat(trkptElements[k].getAttribute(\"lat\"));\n        var lon = parseFloat(trkptElements[k].getAttribute(\"lon\"));\n        var point = {\n          lat: lat,\n          lon: lon\n        };\n        track.points.push(point);\n      }\n    }\n    tracks.push(track);\n  }\n  callback(tracks);\n}","map":{"version":3,"names":["parseGPX","gpxData","callback","parser","DOMParser","xmlDoc","parseFromString","tracks","trkElements","getElementsByTagName","i","length","track","points","trksegElements","j","trkptElements","k","lat","parseFloat","getAttribute","lon","point","push"],"sources":["C:/Users/jan_p/OneDrive/Desktop/Ser 401/Sprint 7/US177/Conversion/cycleapp/src/gpxParser.js"],"sourcesContent":["// gpxParser.js\r\n// A basic gpx parser to get started in reading gpx files returning data that can go into google maps.\r\n//Coder: Jan Baraniecki\r\nfunction parseGPX(gpxData, callback) {\r\n    var parser = new DOMParser();\r\n    var xmlDoc = parser.parseFromString(gpxData, \"text/xml\");\r\n\r\n    var tracks = [];\r\n\r\n    var trkElements = xmlDoc.getElementsByTagName(\"trk\");\r\n    for (var i = 0; i < trkElements.length; i++) {\r\n        var track = { points: [] };\r\n\r\n        var trksegElements = trkElements[i].getElementsByTagName(\"trkseg\");\r\n        for (var j = 0; j < trksegElements.length; j++) {\r\n            var trkptElements = trksegElements[j].getElementsByTagName(\"trkpt\");\r\n            for (var k = 0; k < trkptElements.length; k++) {\r\n                var lat = parseFloat(trkptElements[k].getAttribute(\"lat\"));\r\n                var lon = parseFloat(trkptElements[k].getAttribute(\"lon\"));\r\n                var point = { lat: lat, lon: lon };\r\n                track.points.push(point);\r\n            }\r\n        }\r\n\r\n        tracks.push(track);\r\n    }\r\n\r\n    callback(tracks);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EACjC,IAAIC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;EAC5B,IAAIC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACL,OAAO,EAAE,UAAU,CAAC;EAExD,IAAIM,MAAM,GAAG,EAAE;EAEf,IAAIC,WAAW,GAAGH,MAAM,CAACI,oBAAoB,CAAC,KAAK,CAAC;EACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,IAAIE,KAAK,GAAG;MAAEC,MAAM,EAAE;IAAG,CAAC;IAE1B,IAAIC,cAAc,GAAGN,WAAW,CAACE,CAAC,CAAC,CAACD,oBAAoB,CAAC,QAAQ,CAAC;IAClE,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,cAAc,CAACH,MAAM,EAAEI,CAAC,EAAE,EAAE;MAC5C,IAAIC,aAAa,GAAGF,cAAc,CAACC,CAAC,CAAC,CAACN,oBAAoB,CAAC,OAAO,CAAC;MACnE,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACL,MAAM,EAAEM,CAAC,EAAE,EAAE;QAC3C,IAAIC,GAAG,GAAGC,UAAU,CAACH,aAAa,CAACC,CAAC,CAAC,CAACG,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAIC,GAAG,GAAGF,UAAU,CAACH,aAAa,CAACC,CAAC,CAAC,CAACG,YAAY,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAIE,KAAK,GAAG;UAAEJ,GAAG,EAAEA,GAAG;UAAEG,GAAG,EAAEA;QAAI,CAAC;QAClCT,KAAK,CAACC,MAAM,CAACU,IAAI,CAACD,KAAK,CAAC;MAC5B;IACJ;IAEAf,MAAM,CAACgB,IAAI,CAACX,KAAK,CAAC;EACtB;EAEAV,QAAQ,CAACK,MAAM,CAAC;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}